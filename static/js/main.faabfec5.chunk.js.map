{"version":3,"sources":["components/Checkbox/index.js","components/Task/index.js","components/AddTaskForm/index.js","components/Tasks/index.js","containers/Tasks.js","components/App/index.js","index.js"],"names":["Checkbox","_ref","title","checked","id","taskCompleted","react_default","a","createElement","className","type","onChange","htmlFor","Task","completed","components_Checkbox","AddTaskForm","state","open","taskName","error","handleClickOpen","_this","setState","handleClose","handleSubmit","e","preventDefault","_this$props","props","addNewTask","userId","length","taskNameHandleChange","target","value","Fragment","onClick","this","Dialog_default","onClose","classes","paper","onSubmit","React","Component","Tasks","tasks","map","task","components_Task","Object","assign","key","components_AddTaskForm","require","polyfill","fetchTasksByUserId","fetch","concat","then","response","json","tasksNormalize","filter","reduce","accomulator","objectSpread","defineProperty","catch","reason","console","log","method","body","_this2","tasksArray","keys","components_Tasks","App","Tasks_default","ReactDOM","render","components_App","document","getElementById"],"mappings":"oNAiBeA,eAdE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,QAASC,EAAnBH,EAAmBG,GAAIC,EAAvBJ,EAAuBI,cAAvB,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,SACEE,KAAK,WACLP,QAASA,EACTC,GAAIA,EACJO,SAAU,kBAAMN,EAAcD,MAEhCE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaG,QAASR,GACpCF,MCGQW,EAXF,SAAAZ,GAAA,IAAGC,EAAHD,EAAGC,MAAOY,EAAVb,EAAUa,UAAWV,EAArBH,EAAqBG,GAAIC,EAAzBJ,EAAyBI,cAAzB,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACO,EAAD,CACEb,MAAOA,EACPC,QAASW,EACTV,GAAIA,EACJC,cAAeA,+BCgGNW,oNArGbC,MAAQ,CACNC,MAAM,EACNC,SAAU,GACVC,MAAO,QAGTC,gBAAkB,WAChBC,EAAKC,SAAS,CACZL,MAAM,OAIVM,YAAc,WACZF,EAAKC,SAAS,CAAEL,MAAM,OAGxBO,aAAe,SAAAC,GACbA,EAAEC,iBAEF,IAAIP,EAAQ,KAHMQ,EAKaN,EAAKO,MAA5BC,EALUF,EAKVE,WAAYC,EALFH,EAKEG,OACZZ,EAAaG,EAAKL,MAAlBE,SAEHA,EAASa,SACZZ,EAAQ,oIAGNA,EACFE,EAAKC,SAAS,CACZH,WAMAE,EAAKL,MAAMG,OACbE,EAAKC,SAAS,CACZH,MAAO,KAIXU,EAAWC,EAAQZ,GACnBG,EAAKC,SAAS,CACZL,MAAM,QAIVe,qBAAuB,SAAAP,GACrBJ,EAAKC,SAAS,CACZJ,SAAUO,EAAEQ,OAAOC,iFAKrB,OACE7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6B,SAAA,KACE9B,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,WACV4B,QAASC,KAAKjB,kBAEhBf,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CACEiC,QAASF,KAAKd,YACdN,KAAMoB,KAAKrB,MAAMC,KACjBuB,QAAS,CAAEC,MAAO,UAElBpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMmC,SAAUL,KAAKb,cACnBnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAb,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLyB,MAAOG,KAAKrB,MAAME,SAClBR,SAAU2B,KAAKL,uBAEhBK,KAAKrB,MAAMG,OAASd,EAAAC,EAAAC,cAAA,SAAI8B,KAAKrB,MAAMG,SAGxCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,6CAFZ,OAOFH,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,uBACV4B,QAASC,KAAKd,yBA5FJoB,IAAMC,YCajBC,EAZD,SAAA7C,GAAA,IAAG8C,EAAH9C,EAAG8C,MAAOjB,EAAV7B,EAAU6B,WAAYC,EAAtB9B,EAAsB8B,OAAQ1B,EAA9BJ,EAA8BI,cAA9B,OACZC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZsC,GACCA,EAAMC,IAAI,SAAAC,GAAI,OACZ3C,EAAAC,EAAAC,cAAC0C,EAADC,OAAAC,OAAA,CAAMC,IAAKJ,EAAK7C,IAAQ6C,EAAxB,CAA8B5C,cAAeA,QAGnDC,EAAAC,EAAAC,cAAC8C,EAAD,CAAaxB,WAAYA,EAAYC,OAAQA,uBCVjDwB,EAAQ,KAAeC,4NAGrBvC,MAAQ,CACN8B,MAAO,GACPhB,OAAQ,KAOV0B,mBAAqB,SAAA1B,GACnB,OAAO2B,IAAK,8CAAAC,OAA+C5B,EAA/C,WACT6B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJ,IACME,EADQF,EAASG,OAAO,SAAAf,GAAI,OAAIA,EAAKlB,SAAWA,IACzBkC,OAAO,SAACC,EAAajB,GAChD,OAAOE,OAAAgB,EAAA,EAAAhB,CAAA,GACFe,EADLf,OAAAiB,EAAA,EAAAjB,CAAA,GAEGF,EAAK7C,GAAK6C,KAEZ,IAEH3B,EAAKC,SAAS,CACZwB,MAAOgB,MAGVM,MAAM,SAAAC,GAAM,OAAIC,QAAQC,IAAIF,QAGjCxC,WAAa,SAACC,EAAQ7B,GACpB,OAAOwD,IAAK,6CAA+C,CACzDe,OAAQ,OACRC,KAAM,CACJxE,QACA6B,SACAjB,WAAW,KAGZ8C,KAAK,SAAAC,GACJ,OAAOA,EAASC,SAEjBF,KAAK,SAAAC,GAAY,IACRzD,EAAOyD,EAAPzD,GACRkB,EAAKC,SAAS,CACZwB,MAAMI,OAAAgB,EAAA,EAAAhB,CAAA,GACD7B,EAAKL,MAAM8B,MADXI,OAAAiB,EAAA,EAAAjB,CAAA,GAEF/C,EAAK,CACJA,KACA2B,SACA7B,QACAY,WAAW,SAKlBuD,MAAM,SAAAC,GAAM,OAAIC,QAAQC,IAAI,wBAGjCnE,cAAgB,SAAAD,GAAM,IACZU,EAAcQ,EAAKL,MAAM8B,MAAM3C,GAA/BU,UACRQ,EAAKC,SAAS,CACZwB,MAAMI,OAAAgB,EAAA,EAAAhB,CAAA,GACD7B,EAAKL,MAAM8B,MADXI,OAAAiB,EAAA,EAAAjB,CAAA,GAEF/C,EAFE+C,OAAAgB,EAAA,EAAAhB,CAAA,GAGE7B,EAAKL,MAAM8B,MAAM3C,GAHnB,CAIDU,WAAYA,4FA1DlBwB,KAAKmB,mBAAmBnB,KAAKrB,MAAMc,yCAgE5B,IAAA4C,EAAArC,KACDsC,EAAazB,OAAO0B,KAAKvC,KAAKrB,MAAM8B,OAAOC,IAC/C,SAAA5C,GAAE,OAAIuE,EAAK1D,MAAM8B,MAAM3C,KAGzB,OACEE,EAAAC,EAAAC,cAACsE,EAAD,CACE/B,MAAO6B,EACP7C,OAAQO,KAAKrB,MAAMc,OACnBD,WAAYQ,KAAKR,WACjBzB,cAAeiC,KAAKjC,uBAjFCuC,IAAMC,WCSpBkC,mLARX,OACEzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwE,EAAD,cAJUnC,aCElBoC,IAASC,OAAO5E,EAAAC,EAAAC,cAAC2E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.faabfec5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Checkbox = ({ title, checked, id, taskCompleted }) => (\r\n  <div className=\"checkbox\">\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={checked}\r\n      id={id}\r\n      onChange={() => taskCompleted(id)}\r\n    />\r\n    <label className=\"task__name\" htmlFor={id}>\r\n      {title}\r\n    </label>\r\n  </div>\r\n);\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport Checkbox from \"../Checkbox\";\r\n\r\nconst Task = ({ title, completed, id, taskCompleted }) => (\r\n  <div className=\"task\">\r\n    <Checkbox\r\n      title={title}\r\n      checked={completed}\r\n      id={id}\r\n      taskCompleted={taskCompleted}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport \"./style.scss\";\r\n\r\nclass AddTaskForm extends React.Component {\r\n  state = {\r\n    open: false,\r\n    taskName: \"\",\r\n    error: null\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    let error = null;\r\n\r\n    const { addNewTask, userId } = this.props;\r\n    const { taskName } = this.state;\r\n\r\n    if (!taskName.length) {\r\n      error = \"Введите название задачи\";\r\n    }\r\n\r\n    if (error) {\r\n      this.setState({\r\n        error\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.state.error) {\r\n      this.setState({\r\n        error: \"\"\r\n      });\r\n    }\r\n\r\n    addNewTask(userId, taskName);\r\n    this.setState({\r\n      open: false\r\n    });\r\n  };\r\n\r\n  taskNameHandleChange = e => {\r\n    this.setState({\r\n      taskName: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"button\"\r\n          className=\"task-add\"\r\n          onClick={this.handleClickOpen}\r\n        />\r\n        <Dialog\r\n          onClose={this.handleClose}\r\n          open={this.state.open}\r\n          classes={{ paper: \"popup\" }}\r\n        >\r\n          <div className=\"add-task-form\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <p className=\"add-task-form__title\">Add New Task</p>\r\n              <div className=\"add-task-form__form-group\">\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={this.state.taskName}\r\n                    onChange={this.taskNameHandleChange}\r\n                  />\r\n                  {this.state.error && <p>{this.state.error}</p>}\r\n                </div>\r\n              </div>\r\n              <div className=\"add-task-form__button\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"button button--primary button--full-width\"\r\n                >\r\n                  OK\r\n                </button>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"add-task-form__close\"\r\n                onClick={this.handleClose}\r\n              />\r\n            </form>\r\n          </div>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTaskForm;\r\n","import React from \"react\";\r\nimport Task from \"../Task\";\r\nimport \"./style.scss\";\r\nimport AddTaskForm from \"../AddTaskForm\";\r\n\r\nconst Tasks = ({ tasks, addNewTask, userId, taskCompleted }) => (\r\n  <div className=\"tasks\">\r\n    <div className=\"tasks-list\">\r\n      {tasks &&\r\n        tasks.map(task => (\r\n          <Task key={task.id} {...task} taskCompleted={taskCompleted} />\r\n        ))}\r\n    </div>\r\n    <AddTaskForm addNewTask={addNewTask} userId={userId} />\r\n  </div>\r\n);\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport Tasks from \"../components/Tasks\";\r\nimport fetch from \"isomorphic-fetch\";\r\nrequire(\"es6-promise\").polyfill();\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    tasks: {},\r\n    userId: 1\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchTasksByUserId(this.state.userId);\r\n  }\r\n\r\n  fetchTasksByUserId = userId => {\r\n    return fetch(`https://jsonplaceholder.typicode.com/users/${userId}/todos`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        const tasks = response.filter(task => task.userId === userId);\r\n        const tasksNormalize = tasks.reduce((accomulator, task) => {\r\n          return {\r\n            ...accomulator,\r\n            [task.id]: task\r\n          };\r\n        }, {});\r\n\r\n        this.setState({\r\n          tasks: tasksNormalize\r\n        });\r\n      })\r\n      .catch(reason => console.log(reason));\r\n  };\r\n\r\n  addNewTask = (userId, title) => {\r\n    return fetch(`https://jsonplaceholder.typicode.com/todos`, {\r\n      method: \"POST\",\r\n      body: {\r\n        title,\r\n        userId,\r\n        completed: false\r\n      }\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        const { id } = response;\r\n        this.setState({\r\n          tasks: {\r\n            ...this.state.tasks,\r\n            [id]: {\r\n              id,\r\n              userId,\r\n              title,\r\n              completed: false\r\n            }\r\n          }\r\n        });\r\n      })\r\n      .catch(reason => console.log(\"REQUEST FAILURE\"));\r\n  };\r\n\r\n  taskCompleted = id => {\r\n    const { completed } = this.state.tasks[id];\r\n    this.setState({\r\n      tasks: {\r\n        ...this.state.tasks,\r\n        [id]: {\r\n          ...this.state.tasks[id],\r\n          completed: !completed\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const tasksArray = Object.keys(this.state.tasks).map(\r\n      id => this.state.tasks[id]\r\n    );\r\n\r\n    return (\r\n      <Tasks\r\n        tasks={tasksArray}\r\n        userId={this.state.userId}\r\n        addNewTask={this.addNewTask}\r\n        taskCompleted={this.taskCompleted}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.scss\";\r\nimport Tasks from \"../../containers/Tasks\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Tasks />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.scss\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}